{"remainingRequest":"/Users/kristof/vue/vue-twotter/node_modules/babel-loader/lib/index.js!/Users/kristof/vue/vue-twotter/node_modules/eslint-loader/index.js??ref--13-0!/Users/kristof/vue/vue-twotter/src/store/User.js","dependencies":[{"path":"/Users/kristof/vue/vue-twotter/src/store/User.js","mtime":1610097708887},{"path":"/Users/kristof/vue/vue-twotter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kristof/vue/vue-twotter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kristof/vue/vue-twotter/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IHZhciBVc2VyTW9kdWxlID0gewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIHVzZXI6IG51bGwKICB9LAogIC8vIE11dGF0aW9ucyBhcmUgZnVuY3Rpb25zIHRoYXQgZWZmZWN0IHRoZSBTVEFURS4KICBtdXRhdGlvbnM6IHsKICAgIFNFVF9VU0VSOiBmdW5jdGlvbiBTRVRfVVNFUihzdGF0ZSwgdXNlcikgewogICAgICBzdGF0ZS51c2VyID0gdXNlcjsKICAgIH0KICB9LAogIC8vIEFjdGlvbnMgYXJlIGZ1bmN0aW9ucyB0aGF0IHlvdSBjYWxsIHRocm91Z2hvdXQgeW91ciBhcHBsaWNhdGlvbiB0aGF0IGNhbGwgbXV0YXRpb25zLgogIGFjdGlvbnM6IHsKICAgIHNldFVzZXI6IGZ1bmN0aW9uIHNldFVzZXIoX3JlZiwgdXNlcikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgIGNvbW1pdCgnU0VUX1VTRVInLCB1c2VyKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/kristof/vue/vue-twotter/src/store/User.js"],"names":["UserModule","namespaced","state","user","mutations","SET_USER","actions","setUser","commit"],"mappings":"AAAA,OAAO,IAAMA,UAAU,GAAG;AACtBC,EAAAA,UAAU,EAAE,IADU;AAGtBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE;AADH,GAHe;AAOtB;AACAC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QADO,oBACEH,KADF,EACSC,IADT,EACe;AAClBD,MAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACH;AAHM,GARW;AActB;AACAG,EAAAA,OAAO,EAAE;AACLC,IAAAA,OADK,yBACeJ,IADf,EACqB;AAAA,UAAhBK,MAAgB,QAAhBA,MAAgB;AACtBA,MAAAA,MAAM,CAAC,UAAD,EAAaL,IAAb,CAAN;AACH;AAHI;AAfa,CAAnB","sourcesContent":["export const UserModule = {\n    namespaced: true,\n\n    state: {\n        user: null\n    },\n\n    // Mutations are functions that effect the STATE.\n    mutations: {\n        SET_USER(state, user) {\n            state.user = user;\n        }\n    },\n\n    // Actions are functions that you call throughout your application that call mutations.\n    actions: {\n        setUser({ commit }, user) {\n            commit('SET_USER', user);\n        }\n    }\n}\n"]}]}